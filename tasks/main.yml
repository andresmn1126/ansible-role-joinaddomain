---
- name: Include OS specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- block:
    - name: Install proper version of pip based on installed python interpreter
    - package:
        name: python-pip
      when: ansible_python.version.major==2

    - package:
        name: python3-pip
      when: ansible_python.version.major==3  

- name: Install required packages
  package:
    update_cache: true
    name: "{{ item }}"
    state: present
  loop: "{{ packages }}"

- name: Install pexpect using pip
  pip:
    name: pexpect

- name: Checking if already joined to a domain
  shell: /bin/bash -c "/usr/sbin/realm list {{ ad_domain }}"
  register: ad_status
  changed_when: false
  ignore_errors: true

- name: Join linux into domain
  expect:
    command: /bin/bash -c "/usr/sbin/realm join {{ ad_domain }} --user={{ ad_domain_user }}"
    responses:
      Password.*: "{{ ad_domain_pass }}"
  when: ad_domain not in ad_status.stdout
  register: domain_joined

- name: Allow User Login without FQDN
  lineinfile: 
    backup: yes
    state: present
    dest: /etc/sssd/sssd.conf
    regexp: '^{{ item.search }}'
    line: '{{ item.replace }}'
  with_items:
    - { search: 'use_fully_qualified_names', replace: 'use_fully_qualified_names = False' }
    - { search: 'fallback_homedir', replace: 'fallback_homedir = /home/%u' }

# Added reboot task as loginctl enable linger was not working until after a reboot was done
- name: Reboot machine after it is joined to the domain
  reboot:
    reboot_timeout: 120
  when: domain_joined is changed 

- block:
  - name: Copy pam auth config file to enable home directory auto creation
    copy:
      src: mkhomedir
      dest: /usr/share/pam-configs/mkhomedir
      backup: true
      force: true
      owner: root
      mode: 0622
    notify: enable PAM configuration  
    when: ansible_os_family == "Debian"  
  
  - name: Add alllowed ssh users via realm permit
    shell: |
      /bin/bash -c "/usr/sbin/realm permit {{ item }}"
    changed_when: false
    ignore_errors: true
    loop: "{{ ad_ssh_users }}"
    when: ad_ssh_users is defined          
  
  - name: Add allowed ssh groups via realm permit
    shell: |
      /bin/bash -c "/usr/sbin/realm permit -g '{{ item }}'"
    changed_when: false
    ignore_errors: true
    loop: "{{ ad_ssh_groups }}"
    when: ad_ssh_groups is defined
  
  - name: Create sudoers file for each ad user
    copy:
      content: '{{ item }} ALL=(ALL) ALL'
      dest: "/etc/sudoers.d/{{ item }}"
      mode: 0440
    loop: "{{ ad_sudo_users }}" 
  
  - name: Create sudoers file for each ad group
    copy:
      content: '%{{ item | replace(" ", "\ ;") | replace(";", "") }} ALL=(ALL) ALL'
      dest: '/etc/sudoers.d/{{ item | replace(" ", "_") }}'
      mode: 0440
    loop: "{{ ad_sudo_groups }}"            
  when: domain_joined is changed

